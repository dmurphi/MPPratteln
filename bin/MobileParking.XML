<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MobileParking</name>
    </assembly>
    <members>
        <member name="M:CityParking.Areas.HelpPage.ApiDescriptionExtensions.GetFriendlyId(System.Web.Http.Description.ApiDescription)">
            <summary>
            Generates an URI-friendly ID for the <see cref="T:System.Web.Http.Description.ApiDescription"/>. E.g. "Get-Values-id_name" instead of "GetValues/{id}?name={name}"
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="T:CityParking.Areas.HelpPage.HelpPageConfig">
            <summary>
            Use this class to customize the Help Page.
            For example you can set a custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> to supply the documentation
            or you can provide the samples for the requests/responses.
            </summary>
        </member>
        <member name="T:CityParking.Areas.HelpPage.Controllers.HelpController">
            <summary>
            The controller that will handle requests for the help page.
            </summary>
        </member>
        <member name="M:CityParking.Areas.HelpPage.HelpPageConfigurationExtensions.SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)">
            <summary>
            Sets the documentation provider for help page.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="documentationProvider">The documentation provider.</param>
        </member>
        <member name="M:CityParking.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleObjects(System.Web.Http.HttpConfiguration,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Sets the objects that will be used by the formatters to produce sample requests/responses.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleObjects">The sample objects.</param>
        </member>
        <member name="M:CityParking.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type and action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:CityParking.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample request directly for the specified media type and action with parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:CityParking.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type of the action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:CityParking.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample response directly for the specified media type of the action with specific parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:CityParking.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Sets the sample directly for all actions with the specified type and media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
            <param name="type">The parameter type or return type of an action.</param>
        </member>
        <member name="M:CityParking.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action. 
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:CityParking.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action. 
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:CityParking.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action. 
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:CityParking.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action. 
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:CityParking.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <returns>The help page sample generator.</returns>
        </member>
        <member name="M:CityParking.Areas.HelpPage.HelpPageConfigurationExtensions.SetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration,CityParking.Areas.HelpPage.HelpPageSampleGenerator)">
            <summary>
            Sets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleGenerator">The help page sample generator.</param>
        </member>
        <member name="M:CityParking.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageApiModel(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="apiDescriptionId">The <see cref="T:System.Web.Http.Description.ApiDescription"/> ID.</param>
            <returns>
            An <see cref="T:CityParking.Areas.HelpPage.Models.HelpPageApiModel"/>
            </returns>
        </member>
        <member name="T:CityParking.Areas.HelpPage.Models.HelpPageApiModel">
            <summary>
            The model that represents an API displayed on the help page.
            </summary>
        </member>
        <member name="M:CityParking.Areas.HelpPage.Models.HelpPageApiModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CityParking.Areas.HelpPage.Models.HelpPageApiModel"/> class.
            </summary>
        </member>
        <member name="P:CityParking.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription">
            <summary>
            Gets or sets the <see cref="P:CityParking.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription"/> that describes the API.
            </summary>
        </member>
        <member name="P:CityParking.Areas.HelpPage.Models.HelpPageApiModel.SampleRequests">
            <summary>
            Gets the sample requests associated with the API.
            </summary>
        </member>
        <member name="P:CityParking.Areas.HelpPage.Models.HelpPageApiModel.SampleResponses">
            <summary>
            Gets the sample responses associated with the API.
            </summary>
        </member>
        <member name="P:CityParking.Areas.HelpPage.Models.HelpPageApiModel.ErrorMessages">
            <summary>
            Gets the error messages associated with this model.
            </summary>
        </member>
        <member name="T:CityParking.Areas.HelpPage.HelpPageSampleGenerator">
            <summary>
            This class will generate the samples for the help page.
            </summary>
        </member>
        <member name="M:CityParking.Areas.HelpPage.HelpPageSampleGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CityParking.Areas.HelpPage.HelpPageSampleGenerator"/> class.
            </summary>
        </member>
        <member name="M:CityParking.Areas.HelpPage.HelpPageSampleGenerator.GetSampleRequests(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the request body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:CityParking.Areas.HelpPage.HelpPageSampleGenerator.GetSampleResponses(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the response body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:CityParking.Areas.HelpPage.HelpPageSampleGenerator.GetSample(System.Web.Http.Description.ApiDescription,CityParking.Areas.HelpPage.SampleDirection)">
            <summary>
            Gets the request or response body samples.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:CityParking.Areas.HelpPage.HelpPageSampleGenerator.GetActionSample(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,CityParking.Areas.HelpPage.SampleDirection)">
            <summary>
            Search for samples that are provided directly through <see cref="P:CityParking.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples"/>.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="type">The CLR type.</param>
            <param name="formatter">The formatter.</param>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The sample that matches the parameters.</returns>
        </member>
        <member name="M:CityParking.Areas.HelpPage.HelpPageSampleGenerator.GetSampleObject(System.Type)">
            <summary>
            Gets the sample object that will be serialized by the formatters. 
            First, it will look at the <see cref="P:CityParking.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects"/>. If no sample object is found, it will try to create one using <see cref="T:CityParking.Areas.HelpPage.ObjectGenerator"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The sample object.</returns>
        </member>
        <member name="M:CityParking.Areas.HelpPage.HelpPageSampleGenerator.ResolveType(System.Web.Http.Description.ApiDescription,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},CityParking.Areas.HelpPage.SampleDirection,System.Collections.ObjectModel.Collection{System.Net.Http.Formatting.MediaTypeFormatter}@)">
            <summary>
            Resolves the type of the action parameter or return value when <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/> is used.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or a response.</param>
            <param name="formatters">The formatters.</param>
        </member>
        <member name="M:CityParking.Areas.HelpPage.HelpPageSampleGenerator.WriteSampleObjectUsingFormatter(System.Net.Http.Formatting.MediaTypeFormatter,System.Object,System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Writes the sample object using formatter.
            </summary>
            <param name="formatter">The formatter.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="P:CityParking.Areas.HelpPage.HelpPageSampleGenerator.ActualHttpMessageTypes">
            <summary>
            Gets CLR types that are used as the content of <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="P:CityParking.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples">
            <summary>
            Gets the objects that are used directly as samples for certain actions.
            </summary>
        </member>
        <member name="P:CityParking.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects">
            <summary>
            Gets the objects that are serialized as samples by the supported formatters.
            </summary>
        </member>
        <member name="T:CityParking.Areas.HelpPage.HelpPageSampleKey">
            <summary>
            This is used to identify the place where the sample should be applied.
            </summary>
        </member>
        <member name="M:CityParking.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Creates a new <see cref="T:CityParking.Areas.HelpPage.HelpPageSampleKey"/> based on media type and CLR type.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="type">The CLR type.</param>
        </member>
        <member name="M:CityParking.Areas.HelpPage.HelpPageSampleKey.#ctor(CityParking.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:CityParking.Areas.HelpPage.HelpPageSampleKey"/> based on <see cref="P:CityParking.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="sampleDirection">The <see cref="P:CityParking.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:CityParking.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,CityParking.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:CityParking.Areas.HelpPage.HelpPageSampleKey"/> based on media type, <see cref="P:CityParking.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The <see cref="P:CityParking.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="P:CityParking.Areas.HelpPage.HelpPageSampleKey.ControllerName">
            <summary>
            Gets the name of the controller.
            </summary>
            <value>
            The name of the controller.
            </value>
        </member>
        <member name="P:CityParking.Areas.HelpPage.HelpPageSampleKey.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
            <value>
            The name of the action.
            </value>
        </member>
        <member name="P:CityParking.Areas.HelpPage.HelpPageSampleKey.MediaType">
            <summary>
            Gets the media type.
            </summary>
            <value>
            The media type.
            </value>
        </member>
        <member name="P:CityParking.Areas.HelpPage.HelpPageSampleKey.ParameterNames">
            <summary>
            Gets the parameter names.
            </summary>
        </member>
        <member name="P:CityParking.Areas.HelpPage.HelpPageSampleKey.SampleDirection">
            <summary>
            Gets the <see cref="P:CityParking.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.
            </summary>
        </member>
        <member name="T:CityParking.Areas.HelpPage.ImageSample">
            <summary>
            This represents an image sample on the help page. There's a display template named ImageSample associated with this class.
            </summary>
        </member>
        <member name="M:CityParking.Areas.HelpPage.ImageSample.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CityParking.Areas.HelpPage.ImageSample"/> class.
            </summary>
            <param name="src">The URL of an image.</param>
        </member>
        <member name="T:CityParking.Areas.HelpPage.InvalidSample">
            <summary>
            This represents an invalid sample on the help page. There's a display template named InvalidSample associated with this class.
            </summary>
        </member>
        <member name="T:CityParking.Areas.HelpPage.ObjectGenerator">
            <summary>
            This class will create an object of a given type and populate it with sample data.
            </summary>
        </member>
        <member name="M:CityParking.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)">
            <summary>
            Generates an object for a given type. The type needs to be public, have a public default constructor and settable public properties/fields. Currently it supports the following types:
            Simple types: <see cref="T:System.Int32"/>, <see cref="T:System.String"/>, <see cref="T:System.Enum"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Uri"/>, etc.
            Complex types: POCO types.
            Nullables: <see cref="T:System.Nullable`1"/>.
            Arrays: arrays of simple types or complex types.
            Key value pairs: <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            Tuples: <see cref="T:System.Tuple`1"/>, <see cref="T:System.Tuple`2"/>, etc
            Dictionaries: <see cref="T:System.Collections.Generic.IDictionary`2"/> or anything deriving from <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            Collections: <see cref="T:System.Collections.Generic.IList`1"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.ICollection`1"/>, <see cref="T:System.Collections.IList"/>, <see cref="T:System.Collections.IEnumerable"/>, <see cref="T:System.Collections.ICollection"/> or anything deriving from <see cref="T:System.Collections.Generic.ICollection`1"/> or <see cref="T:System.Collections.IList"/>.
            Queryables: <see cref="T:System.Linq.IQueryable"/>, <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="T:CityParking.Areas.HelpPage.SampleDirection">
            <summary>
            Indicates whether the sample is used for request or response
            </summary>
        </member>
        <member name="T:CityParking.Areas.HelpPage.TextSample">
            <summary>
            This represents a preformatted text sample on the help page. There's a display template named TextSample associated with this class.
            </summary>
        </member>
        <member name="T:CityParking.Areas.HelpPage.XmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file.
            </summary>
        </member>
        <member name="M:CityParking.Areas.HelpPage.XmlDocumentationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CityParking.Areas.HelpPage.XmlDocumentationProvider"/> class.
            </summary>
            <param name="documentPath">The physical path to XML document.</param>
        </member>
        <member name="M:CityParking.Controllers.AccountController.ChangeUser(CityParking.Helpers.UserInfoWrapper)">
            <summary>
            Called in order to change the details of a particular user.
            </summary>
            <param name="userInfo"></param>
            <returns></returns>
        </member>
        <member name="M:CityParking.Controllers.AccountController.ExistingUser(CityParking.Models.UserInfo)">
            <summary>
            called in order to validate an email as an existing user's email.
            </summary>
            <param name="existingUserInfo"></param>
            <returns></returns>
        </member>
        <member name="M:CityParking.Controllers.AccountController.InitialUser(System.String)">
            <summary>
            
            </summary>
            <param name="call_signature"></param>
            <returns></returns>
        </member>
        <member name="M:CityParking.Controllers.AccountController.Timestamp">
            <summary>
            returns the current server timestamp, rounded to 60 seconds.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CityParking.Controllers.LogController.getErrors(System.Int32)">
            <summary>
            returns a list of the logs from the db.
            The number of returned items depends on the maxNo parameter.
            </summary>
            <param name="maxNo"></param>
            <returns></returns>
        </member>
        <member name="T:CityParking.Controllers.InvoiceController">
            <summary>
            packages all functionality related to payment / parking
            history and receiving invoices
            </summary>
        </member>
        <member name="M:CityParking.Controllers.InvoiceController.Invoices(CityParking.Models.InvoiceRequestModel)">
            <summary>
            generates a invoice that is sent as a mail
            attachment.
            </summary>
            <param name="invData"></param>
            <returns></returns>
        </member>
        <member name="T:CityParking.Controllers.LocationsController">
            <summary>
            
            </summary>
        </member>
        <member name="M:CityParking.Controllers.LocationsController.ParkingSpots(System.String,System.Int32,System.Nullable{System.Int32})">
            <summary>
            returns the total number of parking spots for a specific bay and location; it
            uses a signature to validate the callee
            </summary>
            <param name="call_signature">string, used to validate the callee</param>
            <param name="locationId">int?, cityId</param>
            <param name="bayId">int?, parkingId</param>
            <returns>a pair of form "NumberOfParkingSpots":"int"</returns>
        </member>
        <member name="M:CityParking.Controllers.LocationsController.ParkingHoursInterval(System.String,System.Int32)">
            <summary>
            used to retrieve the interval of valid
            parking hours for a particular location
            based on the location id.
            </summary>
            <param name="call_signature"></param>
            <param name="locationId"></param>
            <returns></returns>
        </member>
        <member name="T:CityParking.Controllers.ParkingController">
            <summary>
            
            </summary>
        </member>
        <member name="M:CityParking.Controllers.ParkingController.ParkingCharges(System.String,System.Int32,System.Nullable{System.Int32})">
            <summary>
            returns a list of parking charges in the form of minutes,charge
            where minutes represent the upper bound of the interval in question minutes
            i.e.: 100 - from last value to 100
            </summary>
            <param name="call_signature">string, used to validate the callee</param>
            <param name="locationId">int?, cityId</param>
            <param name="bayId">int?, parkingId</param>
            <returns>List int minute,double cost</returns>
        </member>
        <member name="M:CityParking.Controllers.ParkingController.StartParking(CityParking.Models.ParkingObject)">
            <summary>
            called when a new parking action is started
            </summary>
            <param name="startParkingRequest"></param>
            <returns></returns>
        </member>
        <member name="M:CityParking.Controllers.ParkingController.ExtendParking(CityParking.Models.ParkingObject)">
            <summary>
            called when an existing parking needs to be extended
            </summary>
            <param name="extendParkingRequest">string, used to validate the callee</param>
            <returns>key/value pair with boolean value representing the result of the operation</returns>
        </member>
        <member name="T:CityParking.Controllers.PaymentController">
            <summary>
            Class used to process payments
            </summary>
        </member>
        <member name="M:CityParking.Controllers.PaymentController.PaymentResult(System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Method called by Mobile app repeatedly in order to determine the result of a payment.
            </summary>
            <param name="transactionID"></param>
            <param name="call_signature"></param>
            <param name="failure"></param>
            <param name="notReady"></param>
            <returns></returns>
        </member>
        <member name="M:CityParking.Controllers.PaymentController.VATAmount(System.String,System.String)">
            <summary>
            returns the VAT by country code
            </summary>
            <param name="call_signature"></param>
            <param name="countryCode"></param>
            <returns></returns>
        </member>
        <member name="M:CityParking.Controllers.PaymentController.ConvenienceFee(System.String,System.Int32)">
            <summary>
            Retrieves a convenience fee amount based on a location id
            The fee is used mainly for NA region - european region does not have a
            fee associated.
            </summary>
            <param name="call_signature"></param>
            <param name="locationId"></param>
            <returns></returns>
        </member>
        <member name="T:CityParking.Helpers.MailBodyTemplate">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="T:CityParking.Helpers.MailBodyTemplateBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="M:CityParking.Helpers.MailBodyTemplateBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:CityParking.Helpers.MailBodyTemplateBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:CityParking.Helpers.MailBodyTemplateBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:CityParking.Helpers.MailBodyTemplateBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:CityParking.Helpers.MailBodyTemplateBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:CityParking.Helpers.MailBodyTemplateBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:CityParking.Helpers.MailBodyTemplateBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:CityParking.Helpers.MailBodyTemplateBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:CityParking.Helpers.MailBodyTemplateBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="P:CityParking.Helpers.MailBodyTemplateBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:CityParking.Helpers.MailBodyTemplateBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:CityParking.Helpers.MailBodyTemplateBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:CityParking.Helpers.MailBodyTemplateBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:CityParking.Helpers.MailBodyTemplateBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="P:CityParking.Helpers.MailBodyTemplateBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:CityParking.Helpers.MailBodyTemplateBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="M:CityParking.Helpers.MailBodyTemplateBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:CityParking.Helpers.MailBodyTemplateBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:CityParking.Helpers.MailBodyTemplate.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:CityParking.Helpers.HtmlToPdfBuilder">
            <summary>
            Simplifies generating HTML into a PDF file -http://aspnettutorialonline.blogspot.com/
            </summary>
        </member>
        <member name="M:CityParking.Helpers.HtmlToPdfBuilder.#ctor(iTextSharp.text.Rectangle)">
            <summary>
            Creates a new PDF document template. Use PageSizes.{DocumentSize}
            </summary>
        </member>
        <member name="M:CityParking.Helpers.HtmlToPdfBuilder.AddPage">
            <summary>
            Appends and returns a new page for this document http://aspnettutorialonline.blogspot.com/
            </summary>
        </member>
        <member name="M:CityParking.Helpers.HtmlToPdfBuilder.RemovePage(CityParking.Helpers.HtmlPdfPage)">
            <summary>
            Removes the page from the document http://aspnettutorialonline.blogspot.com/
            </summary>
        </member>
        <member name="M:CityParking.Helpers.HtmlToPdfBuilder.AddStyle(System.String,System.String)">
            <summary>
            Appends a style for this sheet http://aspnettutorialonline.blogspot.com/
            </summary>
        </member>
        <member name="M:CityParking.Helpers.HtmlToPdfBuilder.ImportStylesheet(System.String)">
            <summary>
            Imports a stylesheet into the document
            </summary>
        </member>
        <member name="M:CityParking.Helpers.HtmlToPdfBuilder.InsertBefore(CityParking.Helpers.HtmlPdfPage,CityParking.Helpers.HtmlPdfPage)">
            <summary>
            Moves a page before another
            </summary>
        </member>
        <member name="M:CityParking.Helpers.HtmlToPdfBuilder.InsertAfter(CityParking.Helpers.HtmlPdfPage,CityParking.Helpers.HtmlPdfPage)">
            <summary>
            Moves a page after another
            </summary>
        </member>
        <member name="M:CityParking.Helpers.HtmlToPdfBuilder.RenderPdf">
            <summary>
            Renders the PDF to an array of bytes
            </summary>
        </member>
        <member name="E:CityParking.Helpers.HtmlToPdfBuilder.BeforeRender">
            <summary>
            Method to override to have additional control over the document
            </summary>
        </member>
        <member name="E:CityParking.Helpers.HtmlToPdfBuilder.AfterRender">
            <summary>
            Method to override to have additional control over the document
            </summary>
        </member>
        <member name="P:CityParking.Helpers.HtmlToPdfBuilder.PageSize">
            <summary>
            The page size to make this document
            </summary>
        </member>
        <member name="P:CityParking.Helpers.HtmlToPdfBuilder.Item(System.Int32)">
            <summary>
            Returns the page at the specified index
            </summary>
        </member>
        <member name="P:CityParking.Helpers.HtmlToPdfBuilder.Pages">
            <summary>
            Returns a list of the pages available
            </summary>
        </member>
        <member name="T:CityParking.Helpers.HtmlPdfPage">
            <summary>
            A page to insert into a HtmlToPdfBuilder Class
            </summary>
        </member>
        <member name="M:CityParking.Helpers.HtmlPdfPage.#ctor">
            <summary>
            The default information for this page
            </summary>
        </member>
        <member name="M:CityParking.Helpers.HtmlPdfPage.AppendHtml(System.String,System.Object[])">
            <summary>
            Appends the formatted HTML onto a page
            </summary>
        </member>
        <member name="T:CityParking.Helpers.RenderEvent">
            <summary>
            Delegate for rendering events
            </summary>
        </member>
        <member name="T:CityParking.Helpers.InvoiceTemplate">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="T:CityParking.Helpers.InvoiceTemplateBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="M:CityParking.Helpers.InvoiceTemplateBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:CityParking.Helpers.InvoiceTemplateBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:CityParking.Helpers.InvoiceTemplateBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:CityParking.Helpers.InvoiceTemplateBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:CityParking.Helpers.InvoiceTemplateBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:CityParking.Helpers.InvoiceTemplateBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:CityParking.Helpers.InvoiceTemplateBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:CityParking.Helpers.InvoiceTemplateBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:CityParking.Helpers.InvoiceTemplateBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="P:CityParking.Helpers.InvoiceTemplateBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:CityParking.Helpers.InvoiceTemplateBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:CityParking.Helpers.InvoiceTemplateBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:CityParking.Helpers.InvoiceTemplateBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:CityParking.Helpers.InvoiceTemplateBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="P:CityParking.Helpers.InvoiceTemplateBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:CityParking.Helpers.InvoiceTemplateBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="M:CityParking.Helpers.InvoiceTemplateBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:CityParking.Helpers.InvoiceTemplateBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:CityParking.Helpers.InvoiceTemplate.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:CityParking.Helpers.PmtToPaymentResponse">
            <summary>
            
            </summary>
        </member>
        <member name="M:CityParking.Helpers.PmtToPaymentResponse.convertPmtToPaymentResponse(PMT_HECRESPONSE)">
            <summary>
            
            </summary>
            <param name="paymentDetails"></param>
            <returns></returns>
        </member>
        <member name="T:PMT_HEC">
            <remarks/>
        </member>
        <member name="P:PMT_HEC.Items">
            <remarks/>
        </member>
        <member name="T:PMT_HECRESPONSE">
            <remarks/>
        </member>
        <member name="P:PMT_HECRESPONSE.REQUESTTYPE">
            <remarks/>
        </member>
        <member name="P:PMT_HECRESPONSE.LANG">
            <remarks/>
        </member>
        <member name="P:PMT_HECRESPONSE.CUSTOMER_NO">
            <remarks/>
        </member>
        <member name="P:PMT_HECRESPONSE.RESERVATION_ID">
            <remarks/>
        </member>
        <member name="P:PMT_HECRESPONSE.ERRORCODE">
            <remarks/>
        </member>
        <member name="P:PMT_HECRESPONSE.ERRORTEXT">
            <remarks/>
        </member>
        <member name="P:PMT_HECRESPONSE.RESPONSECODE">
            <remarks/>
        </member>
        <member name="P:PMT_HECRESPONSE.RESPONSETEXT">
            <remarks/>
        </member>
        <member name="P:PMT_HECRESPONSE.AMOUNT">
            <remarks/>
        </member>
        <member name="P:PMT_HECRESPONSE.CURRENCY">
            <remarks/>
        </member>
        <member name="P:PMT_HECRESPONSE.BAYNUMBER">
            <remarks/>
        </member>
        <member name="P:PMT_HECRESPONSE.STARTTIME">
            <remarks/>
        </member>
        <member name="P:PMT_HECRESPONSE.ENDTIME">
            <remarks/>
        </member>
        <member name="P:PMT_HECRESPONSE.TRANSACTION_ID">
            <remarks/>
        </member>
        <member name="P:PMT_HECRESPONSE.MACHINEID">
            <remarks/>
        </member>
        <member name="P:PMT_HECRESPONSE.VAT">
            <remarks/>
        </member>
        <member name="P:PMT_HECRESPONSE.REFCARDNO">
            <remarks/>
        </member>
        <member name="P:PMT_HECRESPONSE.REFFILENO">
            <remarks/>
        </member>
        <member name="P:PMT_HECRESPONSE.LOCATION_ID">
            <remarks/>
        </member>
        <member name="P:PMT_HECRESPONSE.PLATEID">
            <remarks/>
        </member>
        <member name="P:PMT_HECRESPONSE.SPOTID">
            <remarks/>
        </member>
        <member name="P:PMT_HECRESPONSE.CC_NO_MASKED">
            <remarks/>
        </member>
        <member name="P:PMT_HECRESPONSE.CARDTYPE">
            <remarks/>
        </member>
        <member name="P:PMT_HECRESPONSE.STATUS">
            <remarks/>
        </member>
        <member name="P:PMT_HECRESPONSE.FINGERPRINT">
            <remarks/>
        </member>
        <member name="T:CityParking.Helpers.PMT_HEC">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:CityParking.Helpers.PMT_HEC.RESPONSEDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:CityParking.Helpers.PMT_HEC.RESPONSERow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:CityParking.Helpers.PMT_HEC.RESPONSERowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="M:CityParking.Helpers.Validations.EmailIsValid(System.String)">
            <summary>
            used to check the validity of a particular email address.
            </summary>
            <param name="emailAddress"></param>
            <returns></returns>
        </member>
        <member name="M:CityParking.Helpers.Validations.LocationIsValid(System.Int32)">
            <summary>
            used to test the validity of a particular location
            based on it's id
            </summary>
            <param name="locationId"></param>
            <returns></returns>
        </member>
        <member name="M:CityParking.Helpers.Validations.SignatureIsValid(System.String)">
            <summary>
            used to verify if the request is 
            coming from a valid source
            </summary>
            <param name="call_signature"></param>
            <returns></returns>
        </member>
        <member name="M:CityParking.Helpers.Validations.ServerTimestamp">
            <summary>
            gets the number of seconds from 1/1/1970 on the server
            </summary>
            <returns></returns>
        </member>
        <member name="T:CityParking.Models.PaymentModel">
            <summary>
            used to model the payment object returned 
            in order to permit the visualisation
            of the executed parking(s)
            </summary>
        </member>
        <member name="T:timezone">
            <remarks/>
        </member>
        <member name="P:timezone.version">
            <remarks/>
        </member>
        <member name="P:timezone.offset">
            <remarks/>
        </member>
        <member name="P:timezone.suffix">
            <remarks/>
        </member>
        <member name="P:timezone.localtime">
            <remarks/>
        </member>
        <member name="P:timezone.isotime">
            <remarks/>
        </member>
        <member name="P:timezone.utctime">
            <remarks/>
        </member>
        <member name="P:timezone.dst">
            <remarks/>
        </member>
        <member name="P:timezone.location">
            <remarks/>
        </member>
        <member name="T:timezoneLocation">
            <remarks/>
        </member>
        <member name="P:timezoneLocation.latitude">
            <remarks/>
        </member>
        <member name="P:timezoneLocation.longitude">
            <remarks/>
        </member>
        <member name="T:NewDataSet">
            <remarks/>
        </member>
        <member name="P:NewDataSet.Items">
            <remarks/>
        </member>
        <member name="M:CityParking.Services.AccountService.SaveUserData(CityParking.Models.UserInfo)">
            <summary>
            creates a new user
            </summary>
            <param name="newUser"></param>
            <returns></returns>
        </member>
        <member name="M:CityParking.Services.AccountService.ChangeUserData(CityParking.Models.UserInfo,CityParking.Models.UserInfo)">
            <summary>
            alters the data of an already existing user.
            </summary>
            <param name="uInfo"></param>
            <param name="newEmail"></param>
            <param name="newFirstName"></param>
            <param name="newLastName"></param>
            <returns></returns>
        </member>
        <member name="M:CityParking.Services.ILogService.getErrorLogs(System.Int32)">
            <summary>
            retrieves a list of logs from the db
            Number of entries retrieved depends on the axNo parameter
            </summary>
            <param name="maxNo"></param>
            <returns></returns>
        </member>
        <member name="M:CityParking.Services.LocationDataService.getParkingCharges(System.Int32)">
            <summary>
            returns a list of parking tariffs
            or an empty list if no data is found or an error occurs
            </summary>
            <returns></returns>
        </member>
        <member name="M:CityParking.Services.LogService.getErrorLogs(System.Int32)">
            <summary>
            retrieves a list of logs from the db
            Number of entries retrieved depends on the axNo parameter
            </summary>
            <param name="maxNo"></param>
            <returns></returns>
        </member>
        <member name="M:CityParking.Services.InvoiceService.verifyPaymentsByEmail(System.String[],System.String)">
            <summary>
            checks a list of invoice numbers against an email address
            in order to make sure that they were made by the same user
            </summary>
            <param name="invoiceNumbers"></param>
            <returns></returns>
        </member>
        <member name="T:CityParking.Services.PaymentService">
            <summary>
            
            </summary>
        </member>
        <member name="M:CityParking.Services.PaymentService.registerPayment(PMT_HECRESPONSE)">
            <summary>
            
            </summary>
            <param name="paymentDetails"></param>
        </member>
        <member name="M:CityParking.Services.PaymentService.getPaymentDetails(System.String)">
            <summary>
            returns the details of a specific payment based on its transactionID
            </summary>
            <param name="transactionID"></param>
            <returns></returns>
        </member>
        <member name="M:CityParking.Services.PaymentService.getConvenienceFees(System.Int32)">
            <summary>
            retrieves the convention fee for a particular location
            identified by the locationId
            </summary>
            <param name="locationId"></param>
            <returns></returns>
        </member>
        <member name="M:CityParking.Services.PaymentService.UserPayments(CityParking.Models.PaymentsRequestModel)">
            <summary>
            retrieves a list of user payments that occurred between a specified starttime and endtime
            both starttime and endtime are timestamps
            payments are identified based on the re
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:CityParking.Services.ParkingService">
            <summary>
            
            </summary>
        </member>
        <member name="M:CityParking.Services.ParkingService.getParkingSpots(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            
            </summary>
            <param name="locationId"></param>
            <param name="bayId"></param>
            <returns></returns>
        </member>
        <member name="M:CityParking.Services.ParkingService.getParkingCharges(System.Nullable{System.Int32})">
            <summary>
            returns a list of parking tariffs
            or an empty list if no data is found or an error occurs
            </summary>
            <returns></returns>
        </member>
        <member name="M:CityParking.Services.ParkingService.startParking(CityParking.Models.ParkingObject)">
            <summary>
            
            </summary>
            <param name="parkingDetails"></param>
            <returns></returns>
        </member>
        <member name="M:CityParking.Services.ParkingService.startCNPParking(CityParking.Models.ParkingObject)">
            <summary>
            
            </summary>
            <param name="parkingDetails"></param>
            <returns></returns>
        </member>
        <member name="M:CityParking.Services.ParkingService.startCNPFreeParking(CityParking.Models.ParkingObject)">
            <summary>
            register a free aprking request with Cityline Parking API
            </summary>
            <param name="parkingDetails"></param>
            <returns></returns>
        </member>
        <member name="M:CityParking.Services.ParkingService.extendParking(CityParking.Models.ParkingObject)">
            <summary>
            
            </summary>
            <param name="parkingDetails"></param>
            <returns></returns>
        </member>
        <member name="T:CityParking.Models.ParkingCharges">
            <summary>
            
            </summary>
        </member>
        <member name="T:CityParking.Models.ParkingObject">
            <summary>
            
            </summary>
        </member>
        <member name="M:CityParking.Models.ParkingObject.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:CityParking.Models.PaymentResult">
            <summary>
            object returned every time a payment request is made
            it returns true and an empty message on success, 
            or false and an explanatory error message if failed.
            </summary>
        </member>
    </members>
</doc>
